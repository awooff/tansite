/**
 * Coordinates for drawing letters
 */
export const letters = {
	A: [
		[
			[0, 100],
			[50, 0],
		],
		[
			[50, 0],
			[100, 100],
		],
		[
			[25, 50],
			[75, 50],
		],
	],
	B: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[0, 100],
		],
		[
			[0, 100],
			[80, 100],
		],
		[
			[80, 100],
			[100, 90],
		],
		[
			[100, 90],
			[100, 10],
		],
		[
			[100, 10],
			[80, 0],
		],
		[
			[80, 0],
			[0, 0],
		],
		[
			[100, 50],
			[0, 50],
		],
	],
	C: [
		[
			[100, 0],
			[0, 0],
		],
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
	],
	D: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[80, 100],
		],
		[
			[80, 100],
			[100, 80],
		],
		[
			[100, 80],
			[100, 20],
		],
		[
			[100, 20],
			[80, 0],
		],
		[
			[80, 0],
			[0, 0],
		],
	],
	E: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 0],
			[100, 0],
		],
		[
			[0, 50],
			[90, 50],
		],
		[
			[0, 100],
			[100, 100],
		],
	],
	F: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 50],
			[100, 50],
		],
		[
			[0, 0],
			[100, 0],
		],
	],
	G: [
		[
			[100, 0],
			[0, 0],
		],
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
		[
			[100, 100],
			[100, 50],
		],
		[
			[100, 50],
			[50, 50],
		],
	],
	H: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 50],
			[100, 50],
		],
		[
			[100, 0],
			[100, 100],
		],
	],
	I: [
		[
			[0, 0],
			[100, 0],
		],
		[
			[50, 0],
			[50, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
	],
	J: [
		[
			[100, 0],
			[100, 100],
		],
		[
			[100, 100],
			[0, 100],
		],
		[
			[0, 50],
			[0, 100],
		],
	],
	K: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 50],
			[100, 0],
		],
		[
			[0, 50],
			[100, 100],
		],
	],
	L: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
	],
	M: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 0],
			[50, 50],
		],
		[
			[50, 50],
			[100, 0],
		],
		[
			[100, 100],
			[100, 0],
		],
	],
	N: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 0],
			[100, 0],
		],
		[
			[100, 0],
			[100, 100],
		],
	],
	O: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
		[
			[100, 100],
			[100, 0],
		],
		[
			[100, 0],
			[0, 0],
		],
	],
	P: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 50],
			[100, 50],
		],
		[
			[100, 0],
			[100, 50],
		],
		[
			[0, 0],
			[100, 0],
		],
	],
	Q: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
		[
			[100, 100],
			[100, 0],
		],
		[
			[100, 0],
			[0, 0],
		],
		[
			[0, 0],
			[80, 20],
		],
	],
	R: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 0],
			[100, 0],
		],
		[
			[100, 100],
			[100, 50],
		],
		[
			[100, 50],
			[0, 50],
		],
		[
			[0, 50],
			[100, 0],
		],
	],
	S: [
		[
			[100, 0],
			[0, 0],
		],
		[
			[0, 0],
			[0, 50],
		],
		[
			[0, 50],
			[100, 50],
		],
		[
			[100, 50],
			[100, 100],
		],
		[
			[100, 100],
			[0, 100],
		],
	],
	T: [
		[
			[0, 0],
			[100, 0],
		],
		[
			[50, 0],
			[50, 100],
		],
	],
	U: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
		[
			[100, 100],
			[100, 0],
		],
	],
	V: [
		[
			[0, 0],
			[50, 100],
		],
		[
			[50, 100],
			[100, 0],
		],
	],
	W: [
		[
			[0, 0],
			[0, 100],
		],
		[
			[0, 100],
			[50, 50],
		],
		[
			[50, 50],
			[100, 100],
		],
		[
			[100, 100],
			[100, 0],
		],
	],
	X: [
		[
			[0, 0],
			[100, 100],
		],
		[
			[0, 100],
			[100, 0],
		],
	],
	Y: [
		[
			[0, 0],
			[50, 50],
		],
		[
			[50, 50],
			[100, 0],
		],
		[
			[50, 50],
			[50, 100],
		],
	],
	Z: [
		[
			[0, 0],
			[100, 0],
		],
		[
			[100, 0],
			[0, 100],
		],
		[
			[0, 100],
			[100, 100],
		],
	],
} as Record<string, number[][][]>;

export const box = [
	[
		[0, 0],
		[0, 100],
	],
	[
		[0, 0],
		[100, 0],
	],
];
/**
 * Writes a sentence to the canvas using lines for cool vector style look
 * @param ctx
 * @param str
 * @param x
 * @param y
 * @param fontSize
 * @param delta
 * @param colour
 * @param individualDelta
 */
export const writeSentence = (
	ctx: CanvasRenderingContext2D,
	str: string,
	x = 0,
	y = 0,
	fontSize = 12,
	delta = 0,
	colour = "#FFF000",
	individualDelta = true,
) => {
	str = str.toUpperCase();
	for (let i = 0; i < str.length; i++) {
		if (str[i] === " ") {
			x = x + 110 + fontSize;
			continue;
		}

		if (!letters[str[i]]) continue;

		letters[str[i]].forEach((cord) => {
			ctx.strokeStyle = colour;
			ctx.beginPath();
			ctx.lineTo(
				(x + cord[0][0]) * (fontSize / 100) + delta,
				(y + cord[0][1]) * (fontSize / 100) + delta,
			);
			ctx.lineTo(
				(x + cord[1][0]) * (fontSize / 100) + delta,
				(y + cord[1][1]) * (fontSize / 100) + delta,
			);
			ctx.stroke();
		});

		if (individualDelta && i >= 2) delta = delta ^ (i * 0.1);

		x = x + 110 + fontSize;
	}
};
